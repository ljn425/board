<?xml version="1.0" encoding="UTF-8"?>
<!-- 네임스페이스  -ex) mvc는 네임스페이스를 지정하지 않아 안붙여도 된다.(주인) beans는 beans를 붙여줘야한다. -->
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- @Controller를 통해 Spring MVC 사용 가능 하게 해주는 테그-->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- / 요청을 받아도 이쪽 경로는 요청제외 (CSS파일 및 )-->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- beans : 클래스들 (콩같이 주렁주렁 달린듯한 콩같다고 해서) -->
	
	
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- 클래스 return 값은 포워딩하게되는데 prefix는 return값의 앞에 suffix는 return값의 뒤에 +되서 해당 경로로 포워딩한다.  -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 해당 패키지에서 애노테이션 사용공간 , Spring 실행시 해당 context의 패키지에 있는 @를 스캔해 @기능을 스프링상에 beans영역에 구현해놓는다. -->
	<context:component-scan base-package="kr.or.orange" />
	
	<!-- commons dbcp : 앞 예제들처럼 properties를 사용하여 값설정을 하여도 됨 -->
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="jdbc:mysql://127.0.0.1:3306/injava?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <beans:property name="username" value="root"/>
        <beans:property name="password" value="java0000"/>
    </beans:bean>
	
	<!-- mybatis 세션생성을 위한 팩토리 생성 -->
    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybatis 세션생성시 사용할 dataSource주입 -->
        <beans:property name="dataSource" ref="dataSource" />
        <!-- mybatis 세션생성후 쿼리를 실행시킬때 사용할 쿼리위치(메퍼)설정 -->
        <beans:property name="mapperLocations">
            <beans:list>
                <beans:value>classpath:kr/or/orange/service/BoardMapper.xml</beans:value>
            </beans:list>
        </beans:property>
    </beans:bean>
    <!-- mybatis를 사용하여 db에접속하여 쿼리를 보내는 주체인 SqlSessionTemplate빈 생성-->
    <beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg index="0" ref="sqlSessionFactory" />
    </beans:bean>
	
</beans:beans>
